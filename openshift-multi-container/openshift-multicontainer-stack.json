{
  "id": "openshift-sql",
  "name": "Openshift Sql",
  "description": "Openshift Multi Pod Workspace",
  "scope": "general",
  "tags": [
    "Openshift"
  ],
  "workspaceConfig": {
    "environments": {
      "default": {
        "machines": {
          "web/main": {
            "installers": [
              "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
            ],
            "servers": {
              "web": {
                "protocol": "http",
                "port": "8080/tcp"
              }
            }
          },
          "db/main": {
            "installers": [
              "org.eclipse.che.terminal"
            ],
            "servers": {}
          }
        },
        "recipe": {
          "content": "---\nkind: List\nitems:\n-\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: web\n  spec:\n    containers:\n      -\n        image: eclipse/ubuntu_jdk8:latest\n        name: main\n        ports:\n          -\n            containerPort: 8080\n            protocol: TCP\n-\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: db\n    labels:\n      type: db\n  spec:\n    containers:\n      -\n        image: centos/mysql-57-centos7\n        name: main\n        ports:\n          -\n            name: mysql\n            containerPort: 3306\n            protocol: TCP\n        env:\n          - \n            name: MYSQL_USER\n            value: 'petclinic'\n          - \n            name: MYSQL_ROOT_PASSWORD\n            value: 'password'\n          - \n            name: MYSQL_PASSWORD\n            value: 'password'\n          - \n            name: MYSQL_DATABASE\n            value: 'petclinic'\n\n-\n  apiVersion: v1\n  kind: Service\n  metadata:\n    name: db\n  spec:\n    selector:\n      type: db\n    ports:\n      - name: mysql\n        port: 3306\n        protocol: TCP\n        targetPort: mysql",
          "contentType": "application/x-yaml",
          "type": "openshift"
        }
      }
    },
    "name": "default",
    "defaultEnv": "default",
    "description": null,
    "commands": [
      {
        "commandLine": "mvn clean install -f ${current.project.path}",
        "name": "build",
        "type": "mvn",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      }
    ]
  }
}
